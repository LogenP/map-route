# ============================================
# Map Route - Environment Variables
# ============================================
# Copy this file to .env.local and fill in your actual values
# NEVER commit .env.local to version control


# ============================================
# GOOGLE CLOUD CREDENTIALS
# ============================================

# Google Maps JavaScript API Key
# How to obtain:
# 1. Go to Google Cloud Console (console.cloud.google.com)
# 2. Create/select a project
# 3. Enable "Maps JavaScript API" and "Geocoding API"
# 4. Go to APIs & Services > Credentials
# 5. Create API Key and restrict it to your domain
# Used for: Rendering the interactive map on the frontend
NEXT_PUBLIC_MAPS_API_KEY=your_google_maps_api_key_here

# Google Sheets API Key (optional - use service account instead)
# How to obtain: Same as Maps API Key (from Google Cloud Console)
# Used for: Alternative authentication method for Sheets API (not recommended)
# Note: Service account authentication is preferred for server-side operations
GOOGLE_SHEETS_API_KEY=your_google_sheets_api_key_here

# Google Service Account Email
# How to obtain:
# 1. Go to Google Cloud Console > IAM & Admin > Service Accounts
# 2. Create a service account
# 3. Copy the email address (format: name@project-id.iam.gserviceaccount.com)
# 4. Share your Google Sheet with this email address (Editor permissions)
# Used for: Server-side authentication to read/write Google Sheets
GOOGLE_SERVICE_ACCOUNT_EMAIL=your-service-account@project-id.iam.gserviceaccount.com

# Google Service Account Private Key
# How to obtain:
# 1. In Service Accounts, click on your service account
# 2. Go to "Keys" tab > Add Key > Create New Key > JSON
# 3. Open the downloaded JSON file
# 4. Copy the entire "private_key" value (including -----BEGIN/END PRIVATE KEY-----)
# 5. Replace \n with actual newlines, or keep as-is (Node.js handles both)
# Used for: Authenticating API requests from the service account
# IMPORTANT: Keep this secret! Never commit to git or share publicly
GOOGLE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYour private key here\n-----END PRIVATE KEY-----\n"


# ============================================
# GOOGLE SHEETS CONFIGURATION
# ============================================

# Google Sheet ID
# How to obtain:
# 1. Open your Google Sheet
# 2. Copy the ID from the URL: https://docs.google.com/spreadsheets/d/{SHEET_ID}/edit
# Example: If URL is https://docs.google.com/spreadsheets/d/1ABC123xyz/edit
#          Then SHEET_ID is: 1ABC123xyz
# Used for: Identifying which Google Sheet to read/write data from
SHEET_ID=your_google_sheet_id_here

# Sheet Name (tab name within the Google Sheet)
# The name of the specific tab/worksheet containing your location data
# Default: Sheet1
# Used for: Specifying which worksheet tab to read/write from
SHEET_NAME=Sheet1


# ============================================
# APPLICATION CONFIGURATION
# ============================================

# Default Map Center Coordinates (optional)
# Set the initial map center when the app loads
# Format: Latitude,Longitude
# Default: New York City (40.7128,-74.0060)
# Used for: Initial map view before locations are loaded
NEXT_PUBLIC_DEFAULT_MAP_CENTER=40.7128,-74.0060

# Default Map Zoom Level (optional)
# Set the initial zoom level (1-20, where 1 is world view and 20 is street level)
# Default: 10
# Used for: Initial map zoom level
NEXT_PUBLIC_DEFAULT_MAP_ZOOM=10


# ============================================
# DEVELOPMENT/DEBUGGING (optional)
# ============================================

# Node Environment
# Options: development | production | test
# Automatically set by Next.js, but can be overridden
NODE_ENV=development

# Enable verbose API logging
# Set to "true" to enable detailed logging for debugging
# Used for: Troubleshooting API calls and data sync issues
DEBUG_MODE=false
